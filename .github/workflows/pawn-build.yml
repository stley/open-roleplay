# .github/workflows/pawn-build.yml
name: Pawn Build
on:
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LD_LIBRARY_PATH: ${{ github.workspace }}/bin
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Prepare compiler
        shell: bash
        run: |
          ls -la bin
          chmod +x bin/pawncc
          file bin/pawncc
          file bin/libpawnc.so

      - name: Sanity check layout
        shell: bash
        run: |
          test -f gamemodes/main.pwn || { echo "::error::missing gamemodes/main.pwn"; exit 1; }
          test -d qawno/include      || { echo "::error::missing qawno/include"; exit 1; }
          test -d gamemodes/modules  || { echo "::error::missing gamemodes/modules"; exit 1; }

      - name: Compile main.pwn (fail on warnings)
        shell: bash
        run: |
          set -o pipefail
          # Build include args safely: each -i + dir in one array element
          INCLUDES=(-i qawno/include/ -i gamemodes/ -i gamemodes/modules/)
          while IFS= read -r -d '' d; do INCLUDES+=("-i" "$d"); done < <(find gamemodes/modules -type d -print0)

          echo "Include paths:"
          printf '  %s\n' "${INCLUDES[@]}"

          ./bin/pawncc gamemodes/main.pwn "${INCLUDES[@]}" -d3 -E -o /dev/null 2>&1 | tee build.log
          ec=${PIPESTATUS[0]}
          warns=$(grep -Eio 'warning[[:space:]]+[0-9]+:' build.log | wc -l || true)
          errs=$(grep -Eio 'error[[:space:]]+[0-9]+:' build.log | wc -l || true)

          echo "pawncc exit: $ec"
          echo "Warnings:    $warns"
          echo "Errors:      $errs"

          if [ $ec -ne 0 ]; then
            echo "::error::pawncc exit $ec"
            tail -n 200 build.log || true
            exit $ec
          fi
          if [ "$warns" -gt 0 ]; then
            echo "::error::Warnings detected ($warns)"
            grep -Ein 'warning[[:space:]]+[0-9]+:' build.log | tail -n 100 || true
            exit 1
          fi
          echo "OK: no warnings"