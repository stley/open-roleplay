# .github/workflows/pawn-build-windows.yml
name: Pawn Build (Windows)
on:
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Fetch pawncc v3.10.11 (Windows)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $url = 'https://github.com/openmultiplayer/compiler/releases/download/v3.10.11/pawnc-3.10.11-windows.zip'
          Invoke-WebRequest $url -OutFile pawncc.zip
          New-Item -ItemType Directory -Path pawnc-bin | Out-Null
          Expand-Archive -Path pawncc.zip -DestinationPath pawnc-bin -Force
          Get-ChildItem -Recurse pawnc-bin
          $root = Join-Path $PWD 'pawnc-bin\pawnc-3.10.11-windows'
          $env:Path = "$($root)\bin;$($root)\lib;$env:Path"
          # Smoke test (non-zero ok)
          'main(){}' | Out-File -Encoding ascii -FilePath $env:TEMP\_t.pwn
          & "$root\bin\pawncc.exe" $env:TEMP\_t.pwn -oNUL; $global:rc=$LASTEXITCODE
          Write-Host "smoke rc=$rc"

      - name: Validate layout
        shell: pwsh
        run: |
          if (-not (Test-Path 'gamemodes\main.pwn')) { Write-Error 'missing gamemodes\main.pwn' }
          if (-not (Test-Path 'qawno\include'))     { Write-Error 'missing qawno\include' }
          if (-not (Test-Path 'gamemodes\modules')) { Write-Error 'missing gamemodes\modules' }

      - name: Compile main.pwn (warnings fail, no artifact)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $root = Join-Path $PWD 'pawnc-bin\pawnc-3.10.11-windows'
          $env:Path = "$($root)\bin;$($root)\lib;$env:Path"

          $cmd = @(
            "$root\bin\pawncc.exe"
            "gamemodes\main.pwn"
            "-iqawno\include"
            "-igamemodes\modules"
            "-d3","-Z+","-E","-oNUL"
          )
          Write-Host "Running: $($cmd -join ' ')"
          & $cmd 2>&1 | Tee-Object -FilePath build.log
          $rc = $LASTEXITCODE

          $warns = (Select-String -Path build.log -Pattern 'warning\s+\d+:' -SimpleMatch:$false -AllMatches | Measure-Object).Count
          Write-Host "pawncc exit=$rc warnings=$warns"

          if ($rc -ne 0) {
            Write-Host "::error::pawncc exit $rc"
            Get-Content build.log -Tail 200
            exit $rc
          }
          if ($warns -gt 0) {
            Write-Host "::error::Pawn warnings detected ($warns)"
            Select-String -Path build.log -Pattern 'warning\s+\d+:' | Select-Object -Last 100
            exit 1
          }
          Write-Host "OK: no warnings"
