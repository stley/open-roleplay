# .github/workflows/pawn-build.yml
name: Pawn Build
on:
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LD_LIBRARY_PATH: ${{ github.workspace }}/bin
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Prepare compiler
        shell: bash
        run: |
          ls -la bin/
          chmod +x bin/pawncc
          file bin/pawncc
          if [ -f bin/libpawnc.so ]; then
            file bin/libpawnc.so
          fi

      - name: Clean up problematic files
        shell: bash
        run: |
          # Remove any hidden or problematic files that might interfere
          find qawno/include -name ".*" -type f -delete 2>/dev/null || true
          find gamemodes -name ".*" -type f -delete 2>/dev/null || true
          # List what's actually in the include directories
          echo "=== qawno/include contents ==="
          find qawno/include -type f -name "*.inc" | head -20
          echo "=== gamemodes/modules contents ==="
          find gamemodes/modules -type f -name "*.inc" | head -20

      - name: Sanity check layout
        shell: bash
        run: |
          test -f gamemodes/main.pwn || { echo "::error::missing gamemodes/main.pwn"; exit 1; }
          test -d qawno/include || { echo "::error::missing qawno/include"; exit 1; }
          test -d gamemodes/modules || { echo "::error::missing gamemodes/modules"; exit 1; }

      - name: Compile main.pwn (fail on warnings)
        shell: bash
        run: |
          set -o pipefail
          
          # Build include paths - add ALL subdirectories recursively
          INCLUDES=()
          
          # Add base gamemodes directory
          if [ -d "gamemodes" ]; then
            INCLUDES+=("-i" "gamemodes")
          fi
          
          # Add qawno/include and ALL its subdirectories recursively
          if [ -d "qawno/include" ]; then
            while IFS= read -r -d '' dir; do
              INCLUDES+=("-i" "$dir")
            done < <(find qawno/include -type d -print0 2>/dev/null || true)
          fi
          
          # Add gamemodes/modules and ALL its subdirectories recursively
          if [ -d "gamemodes/modules" ]; then
            while IFS= read -r -d '' dir; do
              INCLUDES+=("-i" "$dir")
            done < <(find gamemodes/modules -type d -print0 2>/dev/null || true)
          fi
          
          echo "Include paths:"
          printf '  %s\n' "${INCLUDES[@]}"
          
          # Run the compiler
          ./bin/pawncc gamemodes/main.pwn "${INCLUDES[@]}" -d3 -E -o /dev/null 2>&1 | tee build.log
          
          ec=${PIPESTATUS[0]}
          warns=$(grep -Eic 'warning[[:space:]]+[0-9]+:' build.log 2>/dev/null || echo "0")
          errs=$(grep -Eic 'error[[:space:]]+[0-9]+:' build.log 2>/dev/null || echo "0")
          
          echo "pawncc exit code: $ec"
          echo "Warnings found: $warns"
          echo "Errors found: $errs"
          
          if [ $ec -ne 0 ]; then
            echo "::error::pawncc failed with exit code $ec"
            echo "Build log (last 50 lines):"
            tail -n 50 build.log || true
            exit $ec
          fi
          
          if [ "$warns" -gt 0 ]; then
            echo "::error::Build failed due to $warns warning(s)"
            echo "Warnings found:"
            grep -Ein 'warning[[:space:]]+[0-9]+:' build.log | head -20 || true
            exit 1
          fi
          
          echo "? Build successful: no warnings or errors"